name: Terraform
run-name: ${{ github.actor }} is learning GitHub Actions

on:
  workflow_dispatch:
    inputs:
    runprofile:
      description: 'Terraform Run Profile'
      required: true
      default: plan 
      type: choice
      options:
      - plan
      - apply
      - format
    apply:
      description: 'Select True for Terrafrom apply'
      required: true 
      type: boolean 
  # push:
  #   branches: [ "master" ]
  # pull_request:

permissions:
  contents: read

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: self-hosted
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: terraform

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

        # https://github.com/actions/setup-node
    - uses: actions/setup-node@v3
      with:
        node-version: '16'
    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
        #access vault for creds

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -input=false

